name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Run unit and integration tests with HTML report
      run: |
        cd backend
        pytest --html=report.html --self-contained-html -v

    - name: Upload test report
      uses: actions/upload-artifact@v4
      with:
        name: test-report
        path: backend/report.html

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}    
        
    - name: Build Docker image (no push)
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Dockerfile
        push: false
        tags: my-app:latest
    
    - name: Run Trivy vulnerability scan using Docker
      run: |
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
          -v ${{ github.workspace }}:/root/reports \
          aquasec/trivy:latest image --format table \
          --output /root/reports/trivy-report.txt my-app:latest

    - name: Upload Trivy report
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-report.txt
    
    - name: Build and push to GitHub Packages
      uses: docker/build-push-action@v5
      with:
            context: ./backend
            file: ./backend/Dockerfile
            push: true
            tags: ghcr.io/${{ github.repository }}/backend:latest   
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Azure VM via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_VM_USER }}
          key: ${{ secrets.AZURE_VM_KEY }}
          script: |
              docker pull ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
              docker stop backend || true
              docker rm backend || true
              docker run -d --name backend -p 8001:8001 ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
